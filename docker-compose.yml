version: '2'
services:
  base:
    build:
      context: .
      dockerfile: docker/jiksnu-base/Dockerfile
    image: repo.jiksnu.org/duck1123/jiksnu-base

  ruby-base:
    build:
      context: .
      dockerfile: docker/jiksnu-ruby-base/Dockerfile
    image: repo.jiksnu.org/duck1123/jiksnu-ruby-base
    depends_on:
      - base

  docker-proxy:
    image: shipyard/docker-proxy
    environment:
      PORT: "2375"
      VIRTUAL_HOST: "docker-proxy.docker"
      VIRTUAL_PORT: "2375"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  dockerui:
    image: microbox/dockerui
    depends_on:
      - dnsdock
      - proxy
    ports:
      - "9000:9000"
    environment:
      VIRTUAL_HOST: "dockerui.docker"
    volumes:
      - /var/run/docker.sock:/docker.sock

  dnsdock:
    image: repo.jiksnu.org/duck1123/dnsdock
    build: docker/dnsdock
    command: -verbose=true -environment="dev" -nameserver="8.8.4.4:53"
    environment:
      VIRTUAL_HOST: "dns.docker"
      VIRTUAL_PORT: "80"
    ports:
      - 172.17.42.1:53:53/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # drone:
  #   image: drone/drone
  #   env_file:
  #     - /etc/drone/dronerc
  #   environment:
  #     VIRTUAL_PORT: "drone.docker"
  #   volumes:
  #     - "/var/lib/docker:/var/lib/docker"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   networks:
  #     - backend

  elk:
    image: sebp/elk
    environment:
      LOGSPOUT: "ignore"
      VIRTUAL_HOST: "kibana.docker"
      VIRTUAL_PORT: "5601"
    depends_on:
      - proxy
      - logspout
    volumes:
      - ./docker/elk/conf.d:/etc/logstash/conf.d

  etcd:
    image: microbox/etcd
    command: --name jiksnu -data-dir=/data
    depends_on:
      - redis
    volumes:
      - etcd-data:/data

  etcd-viewer:
    image: nikfoundas/etcd-viewer
    depends_on:
      - etcd
      - proxy
    environment:
      VIRTUAL_HOST: "etcd-viewer.docker"

  grafana:
    image: kamon/grafana_graphite:latest
    environment:
      VIRTUAL_HOST: "grafana.docker"
    depends_on:
      - proxy
    volumes:
      - ./data/whisper:/opt/graphite/storage/whisper
      - ./data/elasticsearch:/var/lib/elasticsearch
      - ./data/grafana:/opt/grafana/data
      - ./data/logs/graphite:/opt/graphite/storage/log
      - ./data/logs/elasticsearch:/var/log/elasticsearch

  jiksnu-integration:
    image: repo.jiksnu.org/duck1123/jiksnu-dev
    depends_on:
      - mongo
      - proxy
    environment:
      JIKSNU_DB_NAME: "jiksnu-integration"
      VIRTUAL_HOST: "jiksnu-integration.docker"
    volumes:
      - .:/app

  karma:
    build:
      dockerfile: docker/karma/Dockerfile
      context: .
    image: repo.jiksnu.org/duck1123/jiksnu-karma
    depends_on:
      - proxy
      - elk
    environment:
      NOTIFY_SEND_URL: "http://172.17.0.1:12345"
      VIRTUAL_HOST: "karma.docker"
      VIRTUAL_PORT: "9876"
    volumes:
      - .:/app

  logspout:
    image: repo.jiksnu.org/duck1123/logspout
    build:
      context: docker/logspout
    environment:
      VIRTUAL_HOST: "logspout.docker"
      ROUTE_URIS: "logstash://elk:5000"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongo:
    image: mongo
    volumes:
      - mongo-data:/data/db

  mongoexpress:
    image: knickers/mongo-express
    depends_on:
      - mongo
      - proxy
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "admin"
      VIRTUAL_HOST: "mongo.docker"

  mysql:
    image: mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      VIRTUAL_HOST: "phpmyadmin.docker"
      PMA_HOST: "mysql"
    depends_on:
      - mysql
      - proxy

  proxy:
    image: rckrdstrgrd/nginx-proxy
    depends_on:
      - dnsdock
    environment:
      DNSDOCK_ALIAS: "dns.docker,etcd-viewer.docker,grafana.docker,jiksnu.docker,jiksnu-integration.docker,kibana.docker,mongo.docker,phpmyadmin.docker,pump.docker,rabbit.docker,redis-commander.docker,selenium.docker,sentry.docker,shipyard.docker"
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/vhost.d:/etc/nginx/vhost.d
      - ./data/nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  rancher:
    image: rancher/server
    depends_on:
      - proxy
    environment:
      VIRTUAL_HOST: "rancher.docker"
      VIRTUAL_PORT: "8080"

  redis:
    image: redis:3

  rethinkdb:
    image: rethinkdb
    restart: always

  web:
    build: .
    image: repo.jiksnu.org/duck1123/jiksnu
    depends_on:
      - mongo
      - proxy
    environment:
      JIKSNU_DB_NAME: "jiksnu_docker"
      VIRTUAL_HOST: "jiksnu.docker"
    volumes:
      - maven-repo:/root/.m2

  web-dev:
    build:
      context: .
      dockerfile: docker/web-dev/Dockerfile
    image: repo.jiksnu.org/duck1123/jiksnu-dev
    depends_on:
      - mongo
      - proxy
    environment:
      HTTP_PORT: "80"
      JIKSNU_DB_NAME: "jiksnu_docker"
      VIRTUAL_HOST: "jiksnu.docker"
    volumes:
      - maven-repo:/root/.m2
      - .:/app

  webdriver:
    image: elgalu/selenium
    environment:
      VNC_PASSWORD: "hunter2"
      NOVNC: "true"
      VIRTUAL_HOST: "selenium.docker"
      VIRTUAL_PORT: "6080"
    expose:
      - "26080"

volumes:
  etcd-data:
    driver: local
  maven-repo:
    driver: local
  mongo-data:
    driver: local
  postgres-data:
    driver: local
  sentry-files:
    driver: local
